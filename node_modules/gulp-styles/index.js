var 
  _             = require('lodash'),
  autoprefixer  = require('autoprefixer'),
  cwd           = process.cwd(),
  gulp          = require('gulp'),
  path          = require('path'),
  postcss       = require('gulp-postcss'),
  poststylus    = require('poststylus'),
  sass          = require('gulp-sass'),
  stylus        = require('gulp-stylus')
;

var Plugins = [
  autoprefixer({overrideBrowserslist: ['last 20 version']
  })
];



var configStyles = {

  srcScss: [
    //APP
    path.join(cwd, 'app', '*.scss'),
    path.join(cwd, 'app', 'css','**', '*.scss'),
    path.join(cwd, 'app', 'scss','**', '*.scss'), ,
    path.join(cwd, 'app', 'src', 'css',  '**', '*.scss'),
    path.join(cwd, 'app', 'src', 'scss','**', '*.scss'),
    path.join(cwd, 'app', 'src', 'static', 'css',  '**', '*.scss'),
    path.join(cwd, 'app', 'src', 'static', 'scss','**', '*.scss'),
    path.join(cwd, 'app', 'src', 'static', 'styles','**', '*.scss'),
    path.join(cwd, 'app', 'src', 'styles','**', '*.scss'),
    path.join(cwd, 'app', 'static', 'css',  '**', '*.scss'),
    path.join(cwd, 'app', 'static', 'scss','**', '*.scss'),
    path.join(cwd, 'app', 'static', 'styles','**', '*.scss'),
    path.join(cwd, 'app', 'styles','**', '*.scss'),

    //ASSET

    path.join(cwd, 'asset', '*.scss'),
    path.join(cwd, 'asset', 'css','**', '*.scss'),
    path.join(cwd, 'asset', 'scss','**', '*.scss'), ,
    path.join(cwd, 'asset', 'src', 'css',  '**', '*.scss'),
    path.join(cwd, 'asset', 'src', 'scss','**', '*.scss'),
    path.join(cwd, 'asset', 'src', 'static', 'css',  '**', '*.scss'),
    path.join(cwd, 'asset', 'src', 'static', 'scss','**', '*.scss'),
    path.join(cwd, 'asset', 'src', 'static', 'styles','**', '*.scss'),
    path.join(cwd, 'asset', 'src', 'styles','**', '*.scss'),
    path.join(cwd, 'asset', 'static', 'css',  '**', '*.scss'),
    path.join(cwd, 'asset', 'static', 'scss','**', '*.scss'),
    path.join(cwd, 'asset', 'static', 'styles','**', '*.scss'),
    path.join(cwd, 'asset', 'styles','**', '*.scss'),
    //CSS
    path.join(cwd, 'css', '*.scss'),
    path.join(cwd, 'css','**','*.scss'),

    //DEV
    path.join(cwd, 'dev', '*.scss'),
    path.join(cwd, 'dev', 'css','**', '*.scss'),
    path.join(cwd, 'dev', 'scss','**', '*.scss'), ,
    path.join(cwd, 'dev', 'src', 'css', '**', '*.scss'),
    path.join(cwd, 'dev', 'src', 'scss','**', '*.scss'),
    path.join(cwd, 'dev', 'src', 'static', 'css',  '**', '*.scss'),
    path.join(cwd, 'dev', 'src', 'static', 'scss','**', '*.scss'),
    path.join(cwd, 'dev', 'src', 'static', 'styles','**', '*.scss'),
    path.join(cwd, 'dev', 'src', 'styles','**', '*.scss'),
    path.join(cwd, 'dev', 'static', 'css', '**', '*.scss'),
    path.join(cwd, 'dev', 'static', 'scss','**', '*.scss'),
    path.join(cwd, 'dev', 'static', 'styles','**', '*.scss'),
    path.join(cwd, 'dev', 'styles','**', '*.scss'),

    //FRONTEND
    path.join(cwd, 'frontend', '*.scss'),
    path.join(cwd, 'frontend', 'css','**', '*.scss'),
    path.join(cwd, 'frontend', 'scss', '**', '*.scss'), ,
    path.join(cwd, 'frontend', 'src', 'css',  '**', '*.scss'),
    path.join(cwd, 'frontend', 'src', 'scss','**', '*.scss'),
    path.join(cwd, 'frontend', 'src', 'static', 'css',  '**', '*.scss'),
    path.join(cwd, 'frontend', 'src', 'static', 'scss','**', '*.scss'),
    path.join(cwd, 'frontend', 'src', 'static', 'styles','**', '*.scss'),
    path.join(cwd, 'frontend', 'src', 'styles','**', '*.scss'),
    path.join(cwd, 'frontend', 'static', 'css',  '**', '*.scss'),
    path.join(cwd, 'frontend', 'static', 'scss','**', '*.scss'),
    path.join(cwd, 'frontend', 'static', 'styles','**', '*.scss'),
    path.join(cwd, 'frontend', 'styles','**', '*.scss'),


    //SCSS
    path.join(cwd, 'scss', '*.scss'),
    path.join(cwd, 'scss','**', '*.scss'),

    //STYLES
    path.join(cwd, 'styles', '*.scss'),
    path.join(cwd, 'styles','**', '*.scss'),

  ],
  srcStylus:[
    //APP
    path.join(cwd, 'app', '*.styl'),
    path.join(cwd, 'app', 'css','**', '*.styl'),
    path.join(cwd, 'app', 'src', 'css',  '**', '*.styl'),
    path.join(cwd, 'app', 'src', 'static', 'css',  '**', '*.styl'),
    path.join(cwd, 'app', 'src', 'static', 'styles','**', '*.styl'),
    path.join(cwd, 'app', 'src', 'static', 'stylus','**', '*.styl'),
    path.join(cwd, 'app', 'src', 'styles','**', '*.styl'),
    path.join(cwd, 'app', 'src', 'stylus','**', '*.styl'),
    path.join(cwd, 'app', 'static', 'css', '**', '*.styl'),
    path.join(cwd, 'app', 'static', 'styles','**', '*.styl'),
    path.join(cwd, 'app', 'static', 'stylus','**', '*.styl'),
    path.join(cwd, 'app', 'styles','**', '*.styl'),
    path.join(cwd, 'app', 'stylus','**', '*.styl'),

    //ASSET
    path.join(cwd, 'asset', '*.styl'),
    path.join(cwd, 'asset', 'css','**', '*.styl'),
    path.join(cwd, 'asset', 'src', 'css', '**', '*.styl'),
    path.join(cwd, 'asset', 'src', 'static', 'css',  '**', '*.styl'),
    path.join(cwd, 'asset', 'src', 'static', 'styles','**', '*.styl'),
    path.join(cwd, 'asset', 'src', 'static', 'stylus','**', '*.styl'),
    path.join(cwd, 'asset', 'src', 'styles','**', '*.styl'),
    path.join(cwd, 'asset', 'src', 'stylus','**', '*.styl'),
    path.join(cwd, 'asset', 'static', 'css','**', '*.styl'),
    path.join(cwd, 'asset', 'static', 'styles','**', '*.styl'),
    path.join(cwd, 'asset', 'static', 'stylus','**', '*.styl'),
    path.join(cwd, 'asset', 'styles','**', '*.styl'),
    path.join(cwd, 'asset', 'stylus','**', '*.styl'),

    //CSS
    path.join(cwd, 'css', '*.styl'),
    path.join(cwd, 'css','**', '*.styl'),

    //DEV
    path.join(cwd, 'dev', '*.styl'),
    path.join(cwd, 'dev', 'css','**', '*.styl'),
    path.join(cwd, 'dev', 'src', 'css','**', '*.styl'),
    path.join(cwd, 'dev', 'src', 'static', 'css','**', '*.styl'),
    path.join(cwd, 'dev', 'src', 'static', 'styles','**', '*.styl'),
    path.join(cwd, 'dev', 'src', 'static', 'stylus','**', '*.styl'),
    path.join(cwd, 'dev', 'src', 'styles','**', '*.styl'),
    path.join(cwd, 'dev', 'src', 'stylus','**', '*.styl'),
    path.join(cwd, 'dev', 'static', 'css', ' **', '*.styl'),
    path.join(cwd, 'dev', 'static', 'styles','**', '*.styl'),
    path.join(cwd, 'dev', 'static', 'stylus','**', '*.styl'),
    path.join(cwd, 'dev', 'styles','**', '*.styl'),
    path.join(cwd, 'dev', 'stylus','**', '*.styl'),

    //FRONTEND
    path.join(cwd, 'frontend', '*.scss'),
    path.join(cwd, 'frontend', 'css','**', '*.styl'),
    path.join(cwd, 'frontend', 'src', 'css',  '**', '*.styl'),
    path.join(cwd, 'frontend', 'src', 'static', 'css',  '**', '*.styl'),
    path.join(cwd, 'frontend', 'src', 'static', 'styles','**', '*.styl'),
    path.join(cwd, 'frontend', 'src', 'static', 'stylus','**', '*.styl'),
    path.join(cwd, 'frontend', 'src', 'styles','**', '*.styl'),
    path.join(cwd, 'frontend', 'src', 'stylus','**', '*.styl'),
    path.join(cwd, 'frontend', 'static', 'css',  '**', '*.scstylss'),
    path.join(cwd, 'frontend', 'static', 'styles','**', '*.styl'),
    path.join(cwd, 'frontend', 'static', 'stylus','**', '*.styl'),
    path.join(cwd, 'frontend', 'styles','**', '*.styl'),
    path.join(cwd, 'frontend', 'stylus','**', '*.styl'),

    //STYLES
    path.join(cwd, 'styles', '*.styl'),
    path.join(cwd, 'styles','**', '*.styl'),


    //STYLES
    path.join(cwd, 'stylus', '*.styl'),
    path.join(cwd, 'stylus','**', '*.styl'),

  ],
  dest: path.join(cwd, 'build', 'static', 'styles'),

};

var self = {
  config: configStyles,
  set: function(config) {
    this.config = _.assign(this.config, config);
  },
  run: function(config) {
    scss(config || this.config);
    stylus(config || this.config);
  }
};

function condition(file) {
  if (file.relative.indexOf('/') !== file.relative.length) {
    return true;
  }

  return false;
}

function scss(config) {
  return gulp.src(config.srcScss)
  .pipe(sass({outputStyle: 'compressed'}).on('error', sass.logError))
  .pipe(postcss(Plugins))
  .pipe(gulp.dest(config.dest));

}

function stylus(config) {
  return gulp.src(config.srcStylus)
    .pipe(stylus({compress: true}))
    .pipe(poststylus(Plugins))
    .pipe(gulp.dest(config.dest));

}

gulp.task('styles', function() {
  self.run();
});

module.exports = self;
